function :: (Double -> Double) -> (Double -> Double) -> Double -> Double
function f g p  = max(f(p)) (g(p))

foo :: (Double -> Double) -> Double -> Double
foo f p = max (exp p) (f(p))

foofoo:: (Double -> Double) -> Double -> Int -> Double
foofoo f x n  | n < 0 = error "Error!"
              | n == 0 = 0
              | otherwise = foofoo f (f x) (n - 1)
              
